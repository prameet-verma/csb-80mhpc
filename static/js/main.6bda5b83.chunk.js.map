{"version":3,"sources":["context/PostContext.js","components/IconButton.js","components/Comment.js","components/CommentList.js","components/CommentForm.js","App.js","index.js"],"names":["Context","React","createContext","usePost","useContext","PostProvider","children","useState","JSON","parse","localStorage","getItem","comments","setComments","console","log","commentsByParentId","useMemo","group","forEach","comment","parentNodeId","push","useEffect","setItem","stringify","Provider","value","rootComments","getReplies","parentId","createComment","commentValue","isRootNode","id","uuid","commentText","childCommments","createdAt","Date","toISOString","prev","updateComment","commentId","updatedValue","updatedComments","map","deleteComment","filteredComments","filter","IconButton","Icon","isActive","color","props","className","dateFormatter","Intl","DateTimeFormat","undefined","dateStyle","timeStyle","Comment","areChildrenHidden","setAreChildrenHidden","isReplying","setIsReplying","isEditing","setIsEditing","childComments","format","CommentForm","autoFocus","editOrReplyActive","initialValue","onSubmit","message","onClick","FaReply","FaEdit","FaTrash","length","CommentList","setMessage","e","preventDefault","onChange","target","type","App","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.6bda5b83.chunk.js","sourcesContent":["import React, { useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { uuid } from \"uuidv4\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport function usePost() {\r\n  return useContext(Context);\r\n}\r\n\r\nexport function PostProvider({ children }) {\r\n  const [comments, setComments] = useState(\r\n    JSON.parse(localStorage.getItem(\"Comments\")) || []\r\n  );\r\n\r\n  console.log(\"JSON\", JSON.parse(localStorage.getItem(\"Comments\")));\r\n  const commentsByParentId = useMemo(() => {\r\n    const group = {};\r\n    console.log(\"updatr\", comments);\r\n    comments.forEach((comment) => {\r\n      group[comment.parentNodeId] ||= [];\r\n      group[comment.parentNodeId].push(comment);\r\n    });\r\n    console.log({ group });\r\n\r\n    return group;\r\n  }, [comments]);\r\n  useEffect(() => {\r\n    localStorage.setItem(\"Comments\", JSON.stringify(comments));\r\n  }, [comments]);\r\n\r\n  // useEffect(() => {\r\n  //   const previousComments = JSON.parse(localStorage.getItem(\"Comments\"));\r\n  //   console.log({ previousComments });\r\n  //   if (previousComments.length > 0) {\r\n  //     setComments(previousComments);\r\n  //   }\r\n  // }, []);\r\n  function getReplies(parentId) {\r\n    return commentsByParentId[parentId];\r\n  }\r\n  const createComment = (\r\n    commentValue,\r\n    isRootNode = true,\r\n    parentNodeId = null\r\n  ) => {\r\n    console.log(\"createComment\", commentValue);\r\n    const comment = {\r\n      id: uuid(),\r\n      commentText: commentValue,\r\n      childCommments: [],\r\n      isRootNode,\r\n      parentNodeId,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n    setComments((prev) => [...prev, comment]);\r\n  };\r\n  const updateComment = (commentId, updatedValue) => {\r\n    console.log(commentId, updatedValue);\r\n    const updatedComments = comments.map((comment) => {\r\n      if (comment.id === commentId) {\r\n        comment.commentText = updatedValue;\r\n      }\r\n      return comment;\r\n    });\r\n    console.log(updatedComments);\r\n    setComments(updatedComments);\r\n  };\r\n\r\n  const deleteComment = (commentId) => {\r\n    console.log(\"Delete called\", commentId);\r\n    // const childCommments = comments.forEach((comment) => {\r\n    //   if (comment.id === commentId) {\r\n    //     return comment.childCommments;\r\n    //   }\r\n    // });\r\n    // console.log(\"Child\", childCommments);\r\n    //removes the parent comment and the corresponding child comments\r\n    const filteredComments = comments.filter((comment) => {\r\n      console.log(\"filter\", comment.id, commentId);\r\n      return comment.id !== commentId;\r\n    });\r\n    console.log({ filteredComments });\r\n    setComments(filteredComments);\r\n  };\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        rootComments: commentsByParentId[null],\r\n        getReplies,\r\n        comments,\r\n        createComment,\r\n        updateComment,\r\n        deleteComment\r\n      }}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  );\r\n}\r\n","function IconButton({ Icon, isActive, color, children, ...props }) {\r\n  return (\r\n    <button\r\n      className={`btn icon-btn ${isActive ? \"icon-btn-active\" : \"\"} ${\r\n        color || \"\"\r\n      }`}\r\n      {...props}\r\n    >\r\n      <span className={`${children != null ? \"mr-1\" : \"\"}`}>\r\n        <Icon />\r\n      </span>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default IconButton;\r\n","import IconButton from \"./IconButton\";\r\nimport { FaEdit, FaReply, FaTrash } from \"react-icons/fa\";\r\nimport CommentList from \"./CommentList\";\r\nimport { useState } from \"react\";\r\nimport { CommentForm } from \"./CommentForm\";\r\nimport { usePost } from \"../context/PostContext\";\r\n\r\nconst dateFormatter = new Intl.DateTimeFormat(undefined, {\r\n  dateStyle: \"medium\",\r\n  timeStyle: \"short\"\r\n});\r\n\r\nexport function Comment({ id, commentText, createdAt }) {\r\n  const [areChildrenHidden, setAreChildrenHidden] = useState(false);\r\n  const [isReplying, setIsReplying] = useState(false);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const { getReplies, createComment, updateComment, deleteComment } = usePost();\r\n  const childComments = getReplies(id);\r\n\r\n  console.log(\"Comment component\");\r\n  function onCommentReply(message) {\r\n    createComment(message, false, id);\r\n    setIsReplying(false);\r\n  }\r\n\r\n  function onCommentUpdate(message) {\r\n    updateComment(id, message);\r\n    setIsEditing(false);\r\n  }\r\n\r\n  function onCommentDelete(commentId) {\r\n    deleteComment(id);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"comment\">\r\n        <div className=\"header\">\r\n          <span className=\"name\">Prameet</span>\r\n          <span className=\"date\">\r\n            {dateFormatter.format(Date.parse(createdAt))}\r\n          </span>\r\n        </div>\r\n        {isEditing ? (\r\n          <CommentForm\r\n            autoFocus\r\n            editOrReplyActive={isEditing}\r\n            initialValue={commentText}\r\n            onSubmit={onCommentUpdate}\r\n          />\r\n        ) : (\r\n          <div className=\"message\">{commentText}</div>\r\n        )}\r\n        <div className=\"footer\">\r\n          <IconButton\r\n            onClick={() => setIsReplying((prev) => !prev)}\r\n            isActive={isReplying}\r\n            Icon={FaReply}\r\n            aria-label={isReplying ? \"Cancel Reply\" : \"Reply\"}\r\n          />\r\n          {\r\n            <>\r\n              <IconButton\r\n                onClick={() => setIsEditing((prev) => !prev)}\r\n                isActive={isEditing}\r\n                Icon={FaEdit}\r\n                aria-label={isEditing ? \"Cancel Edit\" : \"Edit\"}\r\n              />\r\n              <IconButton\r\n                onClick={onCommentDelete}\r\n                Icon={FaTrash}\r\n                aria-label=\"Delete\"\r\n                color=\"danger\"\r\n              />\r\n            </>\r\n          }\r\n        </div>\r\n      </div>\r\n      {isReplying && (\r\n        <div className=\"mt-1 ml-3\">\r\n          <CommentForm\r\n            autoFocus\r\n            editOrReplyActive={isReplying}\r\n            onSubmit={onCommentReply}\r\n          />\r\n        </div>\r\n      )}\r\n      {childComments?.length > 0 && (\r\n        <>\r\n          <div\r\n            className={`nested-comments-stack ${\r\n              areChildrenHidden ? \"hide\" : \"\"\r\n            }`}\r\n          >\r\n            <button\r\n              className=\"collapse-line\"\r\n              aria-label=\"Hide Replies\"\r\n              onClick={() => setAreChildrenHidden(true)}\r\n            />\r\n            <div className=\"nested-comments\">\r\n              <CommentList comments={childComments} />\r\n            </div>\r\n          </div>\r\n          <button\r\n            className={`btn mt-1 ${!areChildrenHidden ? \"hide\" : \"\"}`}\r\n            onClick={() => setAreChildrenHidden(false)}\r\n          >\r\n            Show Replies\r\n          </button>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Comment } from \"./Comment\";\r\n\r\nfunction CommentList({ comments }) {\r\n  console.log(\"CommentList component\");\r\n  return comments.map((comment) => {\r\n    return (\r\n      <div key={comment.id} className=\"comment-stack\">\r\n        <Comment {...comment} />\r\n      </div>\r\n    );\r\n  });\r\n}\r\n\r\nexport default CommentList;\r\n","import { useState } from \"react\";\r\nimport { usePost } from \"../context/PostContext\";\r\nimport CommentList from \"./CommentList\";\r\n\r\nexport function CommentForm({\r\n  editOrReplyActive = false,\r\n  onSubmit = undefined,\r\n  autoFocus = false,\r\n  initialValue = \"\"\r\n}) {\r\n  console.log(\"Comment form\");\r\n  const [message, setMessage] = useState(initialValue);\r\n  const { rootComments, createComment } = usePost();\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (message.length > 0) {\r\n      onSubmit ? onSubmit(message) : createComment(message);\r\n      setMessage(\"\");\r\n    }\r\n  }\r\n  console.log(\"Message\", message, rootComments);\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"comment-form-row\">\r\n          <textarea\r\n            autoFocus={autoFocus}\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            className=\"message-input\"\r\n          />\r\n          <button className=\"btn\" type=\"submit\">\r\n            Post a Comment\r\n          </button>\r\n        </div>\r\n      </form>\r\n      {!editOrReplyActive && rootComments != null && rootComments.length > 0 && (\r\n        <div className=\"mt-4\">\r\n          <CommentList comments={rootComments} />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import \"./styles.css\";\nimport { CommentForm } from \"./components/CommentForm\";\nimport { PostProvider } from \"./context/PostContext\";\nexport default function App() {\n  console.log(\"App Comp\");\n  return (\n    <PostProvider>\n      <div className=\"App\">\n        <h1>Hello CodeSandbox</h1>\n        <h2>Start editing to see some magic happen!</h2>\n        <CommentForm />\n      </div>\n    </PostProvider>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}